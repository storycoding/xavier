{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red27\green29\blue31;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c14118\c15294\c16078;\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs36 \cf0 UX
\fs24 \
\

\fs28 I think hesitations are a part of communication. Seeing what someone is writing as they write it would be an intimate chatting experience.\
\
For that reason, I named this app Xavier, after the famous mindreader from the X-men series.\
\
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\
\

\fs36 React design
\fs28 \
\
In an app as simple as this, I decided to containerize components.\
\
This means that instead of requesting all the history from all the chats from the server upon loading the App, It loads only a list of contacts.\
\
When a contact is clicked, a new container component is rendered, which in turn performs a data request to the server and holds it in its state.
\f1\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl340\partightenfactor0
\cf2 \
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\
\

\fs36 Scaling the socket connections:
\fs30 \
\

\fs28 A single server, configured appropriately can handle hundreds of thousands of simultaneous webSocket connections that are mostly idle since an idle webSocket uses pretty much no server CPU. \
\
For even larger scale deployments, one can cluster the server (run multiple server processes) and use sticky load balancing to spread the load.\
\
Check {\field{\*\fldinst{HYPERLINK "https://socketcluster.io/#!/"}}{\fldrslt https://socketcluster.io/#!/}}}